#!/bin/bash -e

# DEPENDS:
# * sudo
# * util-linux

# VARIABLES:
# BUILD_DIR=    (where the builds happen)
# PRODUCT_NAME=
# BUILD_VARIANT=      (user or userdebug or eng)
# BUILD_TYPE=      (release or debug)

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$DIR"/bind-mount-dirs-android

cd "$BUILD_DIR"/src
source script/copperhead.sh
choosecombo "$BUILD_TYPE" aosp_"$PRODUCT_NAME" "$BUILD_VARIANT"
set -x

# Here is release.sh, rewritten to fit this program.
rm -rf out/release-*
KEY_DIR=keys/"$PRODUCT_NAME"
OUT=out/release-"$PRODUCT_NAME-$BUILD_NUMBER"
mkdir -p "$OUT"

source device/common/clear-factory-images-variables.sh

get_radio_image() {
  grep -Po "require version-$1=\K.+" vendor/$2/vendor-board-info.txt | tr '[:upper:]' '[:lower:]'
}

if [[ $PRODUCT_NAME == bullhead ]]; then
  BOOTLOADER=$(get_radio_image bootloader lge/$PRODUCT_NAME)
  RADIO=$(get_radio_image baseband lge/$PRODUCT_NAME)
  PREFIX=aosp_
elif [[ $PRODUCT_NAME == angler ]]; then
  BOOTLOADER=$(get_radio_image bootloader huawei/$PRODUCT_NAME)
  RADIO=$(get_radio_image baseband huawei/$PRODUCT_NAME)
  PREFIX=aosp_
elif [[ $PRODUCT_NAME == marlin || $PRODUCT_NAME == sailfish || $PRODUCT_NAME == taimen || $PRODUCT_NAME == walleye ]]; then
  BOOTLOADER=$(get_radio_image bootloader google_devices/$PRODUCT_NAME)
  RADIO=$(get_radio_image baseband google_devices/$PRODUCT_NAME)
  PREFIX=aosp_
elif [[ $PRODUCT_NAME == hikey || $PRODUCT_NAME == hikey960 ]]; then
  :
else
  echo "Unknown product name $PRODUCT_NAME" >&2
  exit 16
fi

BUILD=$BUILD_NUMBER
VERSION=$(grep -Po "export BUILD_ID=\K.+" build/core/build_id.mk | tr '[:upper:]' '[:lower:]')
DEVICE=$PRODUCT_NAME
PRODUCT=$PRODUCT_NAME

TARGET_FILES=$PRODUCT_NAME-target_files-$BUILD_NUMBER.zip

if [[ $DEVICE != hikey* ]]; then
  if [[ $DEVICE != taimen && $DEVICE != walleye ]]; then
    VERITY_SWITCHES=(--replace_verity_public_key "$KEY_DIR/verity_key.pub" --replace_verity_private_key "$KEY_DIR/verity"
                     --replace_verity_keyid "$KEY_DIR/verity.x509.pem")
  else
    VERITY_SWITCHES=(--avb_vbmeta_key "$KEY_DIR/avb.pem" --avb_vbmeta_algorithm SHA256_RSA2048)
  fi
fi

if [[ $DEVICE == bullhead ]]; then
  EXTRA_OTA=(-b device/lge/bullhead/update-binary)
fi

build/tools/releasetools/sign_target_files_apks -o -d "$KEY_DIR" "${VERITY_SWITCHES[@]}" \
  out/target/product/$DEVICE/obj/PACKAGING/target_files_intermediates/$PREFIX$DEVICE-target_files-$BUILD_NUMBER.zip \
  "$OUT"/$TARGET_FILES || exit 1

if [[ $DEVICE != hikey* ]]; then
  build/tools/releasetools/ota_from_target_files --block -k "$KEY_DIR/releasekey" "${EXTRA_OTA[@]}" "$OUT"/$TARGET_FILES \
    "$OUT"/$DEVICE-ota_update-$BUILD.zip || exit 1
fi

build/tools/releasetools/img_from_target_files -n "$OUT"/$TARGET_FILES \
  "$OUT"/$DEVICE-img-$BUILD.zip || exit 1

cd "$OUT" || exit 1

if [[ $DEVICE == hikey* ]]; then
  source ../../device/linaro/hikey/factory-images/generate-factory-images-$DEVICE.sh
else
  source ../../device/common/generate-factory-images-common.sh
fi

mv $DEVICE-$VERSION-factory.tar $DEVICE-factory-$BUILD_NUMBER.tar
rm -f $DEVICE-factory-$BUILD_NUMBER.tar.xz
xz -v --lzma2=dict=512MiB,lc=3,lp=0,pb=2,mode=normal,nice=64,mf=bt4,depth=0 $DEVICE-factory-$BUILD_NUMBER.tar
# End of release.sh.
